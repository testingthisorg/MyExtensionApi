// <auto-generated />
using System;
using Assassins.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assassins.DataAccess.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20190604152651_adding-fb-app-id")]
    partial class addingfbappid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assassins.DataModels.Users.AppRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("RoleId");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Administrator"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Assassins Club Free"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "Assassins Club Premium"
                        },
                        new
                        {
                            RoleId = 4,
                            Name = "Assassins Club Platinum"
                        });
                });

            modelBuilder.Entity("Assassins.DataModels.Users.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("CreatedById");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<string>("ExternalId");

                    b.Property<string>("FbAppId");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsSuspended");

                    b.Property<string>("LastName");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ModifiedById");

                    b.Property<DateTime>("ModifiedOn");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            AppUserId = 1,
                            AvatarUrl = "http://free-icon-rainbow.com/i/icon_04062/icon_040629_64.png",
                            CreatedBy = "joe.jordan@assassinsclub.com",
                            CreatedById = 2,
                            CreatedOn = new DateTime(1980, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "system@assassinsclub.com",
                            ExternalId = "8BNz8FqTVGVjYyXudC6DSZkpiws1",
                            FirstName = "System",
                            IsDeleted = false,
                            IsSuspended = false,
                            LastName = "Bot",
                            ModifiedBy = "joe.jordan@assassinsclub.com",
                            ModifiedById = 2,
                            ModifiedOn = new DateTime(1980, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AppUserId = 2,
                            AvatarUrl = "https://i0.wp.com/cdn.auth0.com/avatars/dj.png?ssl=1",
                            CreatedBy = "system@assassinsclub.com",
                            CreatedById = 1,
                            CreatedOn = new DateTime(1980, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joe.jordan@outlook.com",
                            ExternalId = "lv9iYbUYKdRQ0i700sVt9ZjVFps1",
                            FirstName = "Joe",
                            IsDeleted = false,
                            IsSuspended = false,
                            LastName = "Jordan",
                            ModifiedBy = "system@assassinsclub.com",
                            ModifiedById = 1,
                            ModifiedOn = new DateTime(1980, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Assassins.DataModels.Users.AppUserRole", b =>
                {
                    b.Property<int>("AppUserId");

                    b.Property<int>("RoleId");

                    b.HasKey("AppUserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRole");

                    b.HasData(
                        new
                        {
                            AppUserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            AppUserId = 2,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Assassins.DataModels.Users.AppUserRole", b =>
                {
                    b.HasOne("Assassins.DataModels.Users.AppUser", "AppUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Assassins.DataModels.Users.AppRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
